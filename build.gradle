plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.moddev' version '1.0.0'
}

tasks.named('wrapper', Wrapper).configure {
    distributionType = Wrapper.DistributionType.BIN
}

version = "${minecraft_version}-${mod_version}"
group = 'net.grid.vampiresdelight'

base {
    archivesName = 'VampiresDelight'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

neoForge {
    version = project.neo_version

    parchment {
        mappingsVersion = project.parchment_mappings_version
        minecraftVersion = project.parchment_minecraft_version
    }

    runs {
        client {
            client()
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        }

        server {
            server()
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        }

        gameTestServer {
            type = "gameTestServer"
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        }

        data {
            data()
            programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath(), "--existing-mod", "farmersdelight", "--existing-mod", "vampirism"
        }

        configureEach {
            systemProperty 'forge.logging.markers', 'REGISTRIES'

            logLevel = org.slf4j.event.Level.DEBUG
        }
    }

    mods {
        "${mod_id}" {
            sourceSet(sourceSets.main)
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

configurations {
    runtimeClasspath.extendsFrom localRuntime
}

repositories {
    // Vampirism
    maven {
        name = "Maxanier"
        url = "https://maven.maxanier.de/releases"
        content {
            includeGroupAndSubgroups "de.teamlapen"
            includeGroupAndSubgroups "de.maxanier"
        }
    }

    // For Farmer's Delight and others
    // It used to be Cursemaven, but I didn't manage to make it to work in 1.21
    maven {
        url = "https://api.modrinth.com/maven"
    }

    // AppleSkin
    maven {
        url "https://maven.ryanliptak.com/"
    }

    // JEI
    maven {
        // location of the maven that hosts JEI files since January 2023
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
}

dependencies {
    implementation "maven.modrinth:farmers-delight:${farmersdelight_version}"
    implementation "de.teamlapen.vampirism:Vampirism:${minecraft_version}-${vampirism_version}"

    // AppleSkin
    compileOnly "squeek.appleskin:appleskin-neoforge:${appleskin_version}:api"
    compileOnly "squeek.appleskin:appleskin-neoforge:${appleskin_version}"
    if (include_appleskin.toBoolean())
        runtimeOnly "squeek.appleskin:appleskin-neoforge:${appleskin_version}"

    // JEI
    compileOnly("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    compileOnly("mezz.jei:jei-${minecraft_version}-neoforge-api:${jei_version}")

    runtimeOnly("mezz.jei:jei-${minecraft_version}-neoforge:${jei_version}")

    // Werewolves
    if (include_werewolves.toBoolean())
        runtimeOnly("maven.modrinth:werewolves:${minecraft_version}-${werewolves_version}")
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            mod_id: mod_id,
            mod_name: mod_name,
            mod_display_name: mod_display_name,
            mod_version: mod_version,
            mod_license: mod_license,
            credits: credits,

            minecraft_version: minecraft_version,
            minecraft_version_range: minecraft_version_range,

            neo_version: neo_version,
            neo_version_range: neo_version_range,
            loader_version_range: loader_version_range,

            vampirism_version_range: vampirism_version_range,
            farmersdelight_version_range: farmersdelight_version_range
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml']) {
        expand replaceProperties
    }
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/repo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}
